include claudio-theme.conf
include keymaps.conf



# ----- Fonts -----------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#fonts

font_family        SauceCodePro Nerd Font
bold_font          SauceCodePro Nerd Font Bold
italic_font        SauceCodePro Nerd Font Italic
bold_italic_font   SauceCodePro Nerd Font Bold Italic

# Size in pt
font_size 16.0

# Size (px or %, can be negative) of each character cell
adjust_line_height  0
adjust_column_width -1

# Height (px or %) in the cell at which text is positioned
# Underline and strikethrough are adjusted accordingly.
adjust_baseline 0

# Options: always, never, cursor
disable_ligatures never



# ----- Cursor customization --------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#cursor-customization

# Default cursor color
# cursor #cccccc

# Choose the color of text under the cursor. If you want it rendered
# with the background color of the cell underneath instead, use the
# special keyword: background
# cursor_text_color #111111

# The cursor shape can be one of (block, beam, underline). Note that
# when reloading the config this will be changed only if the cursor
# shape has not been set by the program running in the terminal.
# cursor_shape block

# Defines the thickness of the beam cursor (in pts)
# cursor_beam_thickness 1.5

# Defines the thickness of the underline cursor (in pts)
# cursor_underline_thickness 2.0

# The interval (in seconds) at which to blink the cursor. Set to zero
# to disable blinking. Negative values mean use system default. Note
# that numbers smaller than repaint_delay will be limited to
# repaint_delay.
cursor_blink_interval 0

# Stop blinking cursor after the specified number of seconds of
# keyboard inactivity.  Set to zero to never stop blinking.
# cursor_stop_blinking_after 15.0



# ----- Scrollback ------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#scrollback

# Number of lines of history to keep in memory for scrolling back.
# Memory is allocated on demand. Negative numbers are (effectively)
# infinite scrollback. Note that using very large scrollback is not
# recommended as it can slow down performance of the terminal and
# also use large amounts of RAM. Instead, consider using
# scrollback_pager_history_size. Note that on config reload if this
# is changed it will only affect newly created windows, not existing
# ones.
# scrollback_lines 2000

# Program with which to view scrollback in a new window. The
# scrollback buffer is passed as STDIN to this program. If you change
# it, make sure the program you use can handle ANSI escape sequences
# for colors and text formatting. INPUT_LINE_NUMBER in the command
# line above will be replaced by an integer representing which line
# should be at the top of the screen. Similarly CURSOR_LINE and
# CURSOR_COLUMN will be replaced by the current cursor position.
# scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER

# Separate scrollback history size, used only for browsing the
# scrollback buffer (in MB). This separate buffer is not available
# for interactive scrolling but will be piped to the pager program
# when viewing scrollback buffer in a separate window. The current
# implementation stores the data in UTF-8, so approximatively 10000
# lines per megabyte at 100 chars per line, for pure ASCII text,
# unformatted text. A value of zero or less disables this feature.
# The maximum allowed size is 4GB. Note that on config reload if this
# is changed it will only affect newly created windows, not existing
# ones.
# scrollback_pager_history_size 0

# Fill new space with lines from the scrollback buffer after
# enlarging a window.
# scrollback_fill_enlarged_window no

# Modify the amount scrolled by the mouse wheel. Note this is only
# used for low precision scrolling devices, not for high precision
# scrolling on platforms such as macOS and Wayland. Use negative
# numbers to change scroll direction.
# wheel_scroll_multiplier 5.0

# Modify the amount scrolled by a touchpad. Note this is only used
# for high precision scrolling devices on platforms such as macOS and
# Wayland. Use negative numbers to change scroll direction.
# touch_scroll_multiplier 1.0



# ----- Mouse -----------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#mouse

# URLs on mouse-over. url_style options: none, single, double, curly
url_style single
url_color #0087bd

# The program with which to open URLs that are clicked on. The
# special value default means to use the operating system's default
# URL handler.
open_url_with default

# The set of URL prefixes to look for when detecting a URL under the
# mouse cursor.
url_prefixes http https file ftp gemini irc gopher mailto news git

# Detect URLs under the mouse. Detected URLs are highlighted with an
# underline and the mouse cursor becomes a hand over them. Even if
# this option is disabled, URLs are still clickable.
detect_urls yes

# Additional characters to be disallowed from URLs, when detecting
# URLs under the mouse cursor. By default, all characters legal in
# URLs are allowed.
# url_excluded_characters 

# Copy to clipboard or a private buffer on select. With this set to
# clipboard, simply selecting text with the mouse will cause the text
# to be copied to clipboard. Useful on platforms such as macOS that
# do not have the concept of primary selections. You can instead
# specify a name such as a1 to copy to a private kitty buffer
# instead. Map a shortcut with the paste_from_buffer action to paste
# from this private buffer. For example::
#     map cmd+shift+v paste_from_buffer a1
# Note that copying to the clipboard is a security risk, as all
# programs, including websites open in your browser can read the
# contents of the system clipboard.
copy_on_select no

# Remove spaces at the end of lines when copying to clipboard. A
# value of smart will do it when using normal selections, but not
# rectangle selections. always will always do it.
strip_trailing_spaces never

# Characters considered part of a word when double clicking. In
# addition to these characters any character that is marked as an
# alphanumeric character in the unicode database will be matched.
# select_by_word_characters @-./_~?&=%+#

# The interval between successive clicks to detect double/triple
# clicks (in seconds). Negative numbers will use the system default
# instead, if available, or fallback to 0.5.
click_interval -1.0

# Focus window under the mouse when moving the mouse around
focus_follows_mouse no

# The shape of the mouse pointer when the program running in the
# terminal grabs the mouse. Valid values are: arrow, beam and hand
pointer_shape_when_grabbed arrow

# Shape of the mouse pointer. Options: arrow, beam, hand
default_pointer_shape arrow
pointer_shape_when_dragging arrow



# ----- Performance tuning ----------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#performance-tuning

# Delay (in milliseconds) between screen updates. Decreasing it,
# increases frames-per-second (FPS) at the cost of more CPU usage.
# The default value yields ~100 FPS which is more than sufficient for
# most uses. 
repaint_delay 10

# Delay (in milliseconds) before input from the program running in
# the terminal is processed. 
input_delay 3

# Sync screen updates to the refresh rate of the monitor. This
# prevents tearing (https://en.wikipedia.org/wiki/Screen_tearing)
# when scrolling. However, it limits the rendering speed to the
# refresh rate of your monitor. With a very high speed mouse/high
# keyboard repeat rate, you may notice some slight input latency. If
# so, set this to no.
sync_to_monitor yes



# ----- Terminal bell ---------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#terminal-bell

# Enable/disable the audio bell. Useful in environments that require
# silence.
enable_audio_bell yes

# Visual bell duration. Flash the screen when a bell occurs for the
# specified number of seconds. Set to zero to disable.
visual_bell_duration 0.0

# Request window attention on bell. Makes the dock icon bounce on
# macOS or the taskbar flash on linux.
window_alert_on_bell yes

# Show a bell symbol on the tab if a bell occurs in one of the
# windows in the tab and the window is not the currently focused
# window
bell_on_tab yes

# Program to run when a bell occurs. The environment variable
# KITTY_CHILD_CMDLINE can be used to get the program running in the
# window in which the bell occurred.
command_on_bell none



# ----- Window layout ---------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#window-layout

# If enabled, the window size will be remembered so that new
# instances of kitty will have the same size as the previous
# instance. If disabled, the window will initially have size
# configured by initial_window_width/height, in pixels. You can use a
# suffix of "c" on the width/height values to have them interpreted
# as number of cells instead of pixels.
remember_window_size  no
initial_window_width  1000
initial_window_height 600

# The enabled window layouts. A comma separated list of layout names.
# The special value all means all layouts. The first listed layout
# will be used as the startup layout. Default configuration is all
# layouts in alphabetical order. For a list of available layouts, see
# the https://sw.kovidgoyal.net/kitty/overview/#layouts.
# enabled_layouts *

# The step size (in units of cell width/cell height) to use when
# resizing windows. The cells value is used for horizontal resizing
# and the lines value for vertical resizing.
# window_resize_step_cells 2
# window_resize_step_lines 2

# The width of window borders. Can be either in pixels (px) or pts
# (pt). Values in pts will be rounded to the nearest number of pixels
# based on screen resolution. If not specified the unit is assumed to
# be pts. Note that borders are displayed only when more than one
# window is visible. They are meant to separate multiple windows.
window_border_width 0pt

# Draw only the minimum borders needed. This means that only the
# minimum needed borders for inactive windows are drawn. That is only
# the borders that separate the inactive window from a neighbor. Note
# that setting a non-zero window margin overrides this and causes all
# borders to be drawn.
draw_minimal_borders no

# The window margin (in pts) (blank area outside the border). A
# single value sets all four sides. Two values set the vertical and
# horizontal sides. Three values set top, horizontal and bottom. Four
# values set top, right, bottom and left.
window_margin_width 0

# The window margin (in pts) to use when only a single window is
# visible. Negative values will cause the value of
# window_margin_width to be used instead. A single value sets all
# four sides. Two values set the vertical and horizontal sides. Three
# values set top, horizontal and bottom. Four values set top, right,
# bottom and left.
single_window_margin_width 5 3.3

# The window padding (in pts) (blank area between the text and the
# window border). A single value sets all four sides. Two values set
# the vertical and horizontal sides. Three values set top, horizontal
# and bottom. Four values set top, right, bottom and left.
window_padding_width 0

# When the window size is not an exact multiple of the cell size, the
# cell area of the terminal window will have some extra padding on
# the sides. You can control how that padding is distributed with
# this option. Using a value of center means the cell area will be
# placed centrally. A value of top-left means the padding will be on
# only the bottom and right edges.
placement_strategy center

# The color for the border of the active window. Set this to none to
# not draw borders around the active window.
# active_border_color #00ff00
# inactive_border_color #cccccc

# The color for the border of inactive windows in which a bell has
# occurred
# bell_border_color #ff5a00

# Fade the text in inactive windows by the specified amount (a number
# between zero and one, with zero being fully faded).
inactive_text_alpha 0.7

# Options:
#   titlebar-only: rounded borders, not so seamless on Mac
#   yes: completely seamless, blends well
#   no: like other Mac apps, but has gray titlebar, not like iTerm
# For now there is no way with yabai to fn+mouse1 drag to move the window without disabling SIP.
# Note that the effects of changing
# this setting when reloading config are undefined.
hide_window_decorations no

macos_titlebar_color background

# Choose how kitty draws a window while a resize is in progress.
#   static: draw the current window contents, mostly unchanged
#   scale: draw the current window contents scaled
#   blank: draw a blank window
#   size: show the window size in cells
# resize_draw_strategy static

# Resize the OS window in steps as large as the cells, instead of
# with the usual pixel accuracy. Combined with an
# initial_window_width and initial_window_height in number of cells,
# this option can be used to keep the margins as small as possible
# when resizing the OS window. Note that this does not currently work
# on Wayland.
# resize_in_steps no

# Ask for confirmation when closing an OS window or a tab that has at
# least this number of kitty windows in it. A value of zero disables
# confirmation. This confirmation also applies to requests to quit
# the entire application (all OS windows, via the quit action).
confirm_os_window_close 0



# ----- Tab bar ---------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#tab-bar

# Which edge to show the tab bar on. Options: top, bottom
tab_bar_edge top

# The margin to the left and right of the tab bar (in pts)
# tab_bar_margin_width 0.0

# The margin above and below the tab bar (in pts). The first number
# is the margin between the edge of the OS Window and the tab bar and
# the second number is the margin between the tab bar and the
# contents of the current tab.
# tab_bar_margin_height 0.0 0.0

# The tab bar style, can be one of:
#   fade: each tab's edges fade into the background color (see tab_fade)
#   slant: tabs look like the tabs in a physical file
#   separator: tabs are separated by a configurable separator (see tab_separator)
#   powerline: tabs are shown as a continuous line with "fancy" separators (see tab_powerline_style)
#   hidden: tab bar is hidden (https://sw.kovidgoyal.net/kitty/actions/#select-tab)
tab_bar_style fade

# The minimum number of tabs to display the bar
tab_bar_min_tabs 2

# The tab to switch when the current one is closed. Options: previous, left, right, last (right-most)
tab_switch_strategy previous

# Control how each tab fades into the background when using fade for
# the tab_bar_style. Each number is an alpha (between zero and one)
# that controls how much the corresponding cell fades into the
# background, with zero being no fade and one being full fade. You
# can change the number of cells used by adding/removing entries to
# this list.
tab_fade 0.25 0.5 0.75 1

# Used when tab_bar_style = separator
tab_separator " - "

# The powerline separator style between tabs in the tab bar when
# using powerline as the tab_bar_style, can be one of: angled,
# slanted, or round.
tab_powerline_style angled

# Some text or a unicode symbol to show on the tab if a window in the
# tab that does not have focus has some activity. If you want to use
# leading or trailing spaces surround the text with quotes.
tab_activity_symbol none

# A template to render the tab title. The default just renders the
# title. If you wish to include the tab-index as well, use something
# like: {index}: {title}. Useful if you have shortcuts mapped for
# goto_tab N. If you prefer to see the index as a superscript, use
# {sup.index}. In addition you can use {layout_name} for the current
# layout name, {num_windows} for the number of windows in the tab and
# {num_window_groups} for the number of window groups (not counting
# overlay windows) in the tab. Note that formatting is done by
# Python's string formatting machinery, so you can use, for instance,
# {layout_name[:2].upper()} to show only the first two letters of the
# layout name, upper-cased. If you want to style the text, you can
# use styling directives, for example:
# {fmt.fg.red}red{fmt.fg.default}normal{fmt.bg._00FF00}green
# bg{fmt.bg.normal}. Similarly, for bold and italic:
# {fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}.
tab_title_template        "  {index}: {title}"
active_tab_title_template "> {index}: {title}"

# Tab bar colors and styles
# active_tab_foreground   #000
# active_tab_background   #eee
# active_tab_font_style   bold-italic
# inactive_tab_foreground #444
# inactive_tab_background #999
# inactive_tab_font_style normal
# tab_bar_background none



# ----- Colors ----------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#color-scheme

# Allow changing of the background_opacity dynamically, using either
# keyboard shortcuts (increase_background_opacity and
# decrease_background_opacity) or the remote control facility.
# Changing this setting by reloading the config is not supported.
# dynamic_background_opacity no

# How much to tint the background image by the background color. The
# tint is applied only under the text area, not margin/borders. Makes
# it easier to read the text. Tinting is done using the current
# background color for each window. This setting applies only if
# background_opacity is set and transparent windows are supported or
# background_image is set.
# background_tint 0.0

# How much to dim text that has the DIM/FAINT attribute set. One
# means no dimming and zero means fully dimmed (i.e. invisible).
# dim_opacity 0.75

# The foreground for text selected with the mouse. A value of none
# means to leave the color unchanged.
# selection_foreground #000000

# The background for text selected with the mouse.
# selection_background #fffacd

# The color table 
# The 256 terminal colors. There are 8 basic colors, each color has a
# dull and bright version, for the first 16 colors. You can set the
# remaining 240 colors as color16 to color255.

# black
# color0 #000000
# color8 #767676

# red
# color1 #cc0403
# color9 #f2201f

# green
# color2  #19cb00
# color10 #23fd00

# yellow
# color3  #cecb00
# color11 #fffd00

# blue
# color4  #0d73cc
# color12 #1a8fff

# magenta
# color5  #cb1ed1
# color13 #fd28ff

# cyan
# color6  #0dcdcd
# color14 #14ffff

# white
# color7  #dddddd
# color15 #ffffff

# Color for marks of type 1
# mark1_foreground black

# Color for marks of type 1 (light steel blue)
# mark1_background #98d3cb

# Color for marks of type 2
# mark2_foreground black

# Color for marks of type 1 (beige)
# mark2_background #f2dcd3

# Color for marks of type 3
# mark3_foreground black

# Color for marks of type 3 (violet)
# mark3_background #f274bc


# ----- Advanced --------------------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#advanced

# The shell program to execute. The default value of . means to use
# whatever shell is set as the default shell for the current user.
# Note that on macOS if you change this, you might need to add
# --login and --interactive to ensure that the shell starts in
# interactive mode and reads its startup rc files.
# shell .

# The terminal editor (such as ``vim`` or ``nano``) to use when
# editing the kitty config file or similar tasks.
# The default value of . means to use the environment variables
# VISUAL and EDITOR in that order. If these variables aren't set,
# kitty will run your shell (``$SHELL -l -i -c env``) to see if your
# shell config files set VISUAL or EDITOR. If that doesn't work,
# kitty will cycle through various known editors (``vim``, ``emacs``,
# etc) and take the first one that exists on your system.
# editor .

# Close the window when the child process (shell) exits. If no (the
# default), the terminal will remain open when the child exits as
# long as there are still processes outputting to the terminal (for
# example disowned or backgrounded processes). If yes, the window
# will close as soon as the child process exits. Note that setting it
# to yes means that any background processes still using the terminal
# can fail silently because their stdout/stderr/stdin no longer work.
# close_on_child_death no

# Allow other programs to control kitty. If you turn this on other
# programs can control all aspects of kitty, including sending text
# to kitty windows, opening new windows, closing windows, reading the
# content of windows, etc.  Note that this even works over ssh
# connections. You can chose to either allow any program running
# within kitty to control it, with yes or only programs that connect
# to the socket specified with the kitty --listen-on command line
# option, if you use the value socket-only. The latter is useful if
# you want to prevent programs running on a remote computer over ssh
# from controlling kitty. Reloading the config will not affect this
# setting.
# allow_remote_control no

# Tell kitty to listen to the specified unix/tcp socket for remote
# control connections. Note that this will apply to all kitty
# instances. It can be overridden by the kitty --listen-on command
# line flag. This option accepts only UNIX sockets, such as
# unix:${TEMP}/mykitty or (on Linux) unix:@mykitty. Environment
# variables are expanded. If {kitty_pid} is present then it is
# replaced by the PID of the kitty process, otherwise the PID of the
# kitty process is appended to the value, with a hyphen. This option
# is ignored unless you also set allow_remote_control to enable
# remote control. See the help for kitty --listen-on for more
# details. Changing this option by reloading the config is not
# supported.
# listen_on none

# Specify environment variables to set in all child processes. Note
# that environment variables are expanded recursively, so if you
# use::
#     env MYVAR1=a
#     env MYVAR2=${MYVAR1}/${HOME}/b
# The value of MYVAR2 will be a/<path to home directory>/b.
# env 

# Periodically check if an update to kitty is available. If an update
# is found a system notification is displayed informing you of the
# available update. The default is to check every 24 hrs, set to zero
# to disable. Changing this option by reloading the config is not
# supported.
# update_check_interval 24

# Path to a session file to use for all kitty instances. Can be
# overridden by using the kitty --session command line option for
# individual instances. See
# https://sw.kovidgoyal.net/kitty/overview/#startup-sessions in the
# kitty documentation for details. Note that relative paths are
# interpreted with respect to the kitty config directory. Environment
# variables in the path are expanded. Changing this option by
# reloading the config is not supported.
# startup_session none

# Allow programs running in kitty to read and write from the
# clipboard. You can control exactly which actions are allowed. The
# set of possible actions is: write-clipboard read-clipboard write-
# primary read-primary. The default is to allow writing to the
# clipboard and primary selection. Note that enabling the read
# functionality is a security risk as it means that any program, even
# one running on a remote server via SSH can read your clipboard. See
# also  clipboard_max_size.
# clipboard_control write-clipboard write-primary

# The maximum size (in MB) of data from programs running in kitty
# that will be stored for writing to the system clipboard. See also
# clipboard_control. A value of zero means no size limit is applied.
# clipboard_max_size 64

# Process hyperlink (OSC 8) escape sequences. If disabled OSC 8
# escape sequences are ignored. Otherwise they become clickable
# links, that you can click by holding down ctrl+shift and clicking
# with the mouse. The special value of ``ask`` means that kitty will
# ask before opening the link.
allow_hyperlinks yes

# The value of the TERM environment variable to set. Changing this
# can break many terminal programs, only change it if you know what
# you are doing, not because you read some advice on Stack Overflow
# to change it. The TERM variable is used by various programs to get
# information about the capabilities and behavior of the terminal. If
# you change it, depending on what programs you run, and how
# different the terminal you are changing it to is, various things
# from key-presses, to colors, to various advanced features may not
# work. Changing this option by reloading the config will only affect
# newly created windows.
term xterm-kitty



# ----- OS specific tweaks ----------------------------------------------------
# https://sw.kovidgoyal.net/kitty/conf/#os-specific-tweaks

# Change the color of the kitty window's titlebar on macOS. A value
# of system means to use the default system color, a value of
# background means to use the background color of the currently
# active window and finally you can use an arbitrary color, such as
# #12af59 or red. WARNING: This option works by using a hack, as
# there is no proper Cocoa API for it. It sets the background color
# of the entire window and makes the titlebar transparent. As such it
# is incompatible with background_opacity. If you want to use both,
# you are probably better off just hiding the titlebar with
# hide_window_decorations.
# macos_titlebar_color system

# Use the option key as an alt key. With this set to no, kitty will
# use the macOS native Option+Key = unicode character behavior. This
# will break any Alt+key keyboard shortcuts in your terminal
# programs, but you can use the macOS unicode input technique. You
# can use the values: left, right, or both to use only the left,
# right or both Option keys as Alt, instead. Changing this setting by
# reloading the config is not supported.
# macos_option_as_alt no

# Hide the kitty window from running tasks (⌘+Tab) on macOS. Changing
# this setting by reloading the config is not supported.
# macos_hide_from_tasks no

# Have kitty quit when all the top-level windows are closed. By
# default, kitty will stay running, even with no open windows, as is
# the expected behavior on macOS.
macos_quit_when_last_window_closed yes

# Disable this if you want kitty top-level (OS) windows to not be
# resizable on macOS. Changing this setting by reloading the config
# will only affect newly created windows.
# macos_window_resizable yes

# Draw an extra border around the font with the given width, to
# increase legibility at small font sizes. For example, a value of
# 0.75 will result in rendering that looks similar to sub-pixel
# antialiasing at common font sizes.
macos_thicken_font 0.25

# Use the traditional full-screen transition, that is faster, but
# less pretty.
# macos_traditional_fullscreen no

# Show or hide the window title in the macOS window or menu-bar. A
# value of window will show the title of the currently active window
# at the top of the macOS window. A value of menubar will show the
# title of the currently active window in the macOS menu-bar, making
# use of otherwise wasted space. all will show the title everywhere
# and none hides the title in the window and the menu-bar.
# macos_show_window_title_in all

# Enable/disable custom mouse cursor for macOS that is easier to see
# on both light and dark backgrounds. WARNING: this might make your
# mouse cursor invisible on dual GPU machines. Changing this setting
# by reloading the config is not supported.
# macos_custom_beam_cursor no

